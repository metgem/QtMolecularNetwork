name: Release

on:
  release:
    types: [ published ]
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
        os: [ubuntu-latest, windows-2019, macos-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Cache conda packages
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-${{ env.CACHE_NUMBER }}
    - name: Set up Python ${{ matrix.python-version }} (Miniconda)
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        mamba-version: "*"
        channel-priority: strict
        channels: conda-forge
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Conda info
      shell: bash -l {0}
      run: |
        mamba info
        mamba list
        mamba config --show-sources
        mamba config --show
    - name: Install build dependencies
      shell: bash -l {0}
      run: |
        mamba install -n base conda==4.14.0 conda-build conda-verify pyside6
        mamba install anaconda-client
    - name: Install libiconv
      shell: bash -l {0}
      run: mamba install -n base libiconv
      if: runner.os == 'Linux'
    - name: Build
      shell: bash -l {0}
      run: |
        mamba config --set anaconda_upload yes
        mamba build recipe --python ${{ matrix.python-version }} --token ${{ secrets.ANACONDA_UPLOAD_TOKEN }} --user metgem
        
